@import 'variables.less';

// Box sizing
.box-sizing(@boxmodel) {
	-webkit-box-sizing: @boxmodel;
	-moz-box-sizing: @boxmodel;
	box-sizing: @boxmodel;
}

* {
	.box-sizing(border-box);
}
*:before,
*:after {
	.box-sizing(border-box);
}

.container {
	position: relative;
	width: 100%;
	max-width: 960px;
	margin: 0 auto;
	padding: 0 20px;
	box-sizing: border-box;
}

.container-fluid {
	position: relative;
	width: 100%;
	margin: 0 auto;
	padding: 0 20px;
	box-sizing: border-box;
}

.row {
	margin-left:-15px;
	margin-right:-15px;
	&:extend(.clearfix all);
}

.make-grid-columns() {
	// Common styles for all sizes of grid columns
	.col(@index) {
		@item: ~".xs-@{index}, .sm-@{index}, .md-@{index}, .lg-@{index}";
		.col((@index + 1), @item);
	}
	.col(@index, @list) when (@index =< @columns) {
	@item: ~".xs-@{index}, .sm-@{index}, .md-@{index}, .lg-@{index}";
	.col((@index + 1), ~"@{list}, @{item}");
}
.col(@index, @list) when (@index > @columns) {
	@{list} {
		position: relative;
		// Prevent columns from collapsing when empty
		min-height: 1px;
		// Inner gutter via padding
		padding-left:  (@gutter-width / 2);
		padding-right: (@gutter-width / 2);
	}
}
.col(1);
}

.float-grid-columns(@class) {
	.col(@index) {
		@item: ~".@{class}-@{index}";
		.col((@index + 1), @item);
	}
	.col(@index, @list) when (@index =< @columns) {
		@item: ~".@{class}-@{index}";
		.col((@index + 1), ~"@{list}, @{item}");
	}
	.col(@index, @list) when (@index > @columns) {
		@{list} {
			float: left;
		}
	}
	.col(1);
}

.calc-grid-column(@index, @class, @type) when (@type = width) and (@index > 0) {
	.@{class}-@{index} {
		width: percentage((@index / @columns));
	}
}
.calc-grid-column(@index, @class, @type) when (@type = offset) {
	.@{class}-offset-@{index} {
		margin-left: percentage((@index / @columns));
	}
}

// Create Grid Columns
.loop-grid-columns(@index, @class, @type) when (@index >= 0) {
	.calc-grid-column(@index, @class, @type);
	// next iteration
	.loop-grid-columns((@index - 1), @class, @type);
}

// Create grid for specific class
.make-grid(@class) {
	.float-grid-columns(@class);
	.loop-grid-columns(@columns, @class, width);
	.loop-grid-columns(@columns, @class, offset);
}

.make-grid-columns();

// Extra small grid
// Columns and offsets for extra small devices like
// smartphones.
.make-grid(xs);
// Small grid
// Columns and offsets for the small device range, from phones
// to tablets.
@media (min-width: @screen-sm) { .make-grid(sm); }
// Medium grid
// Columns and offsets for the desktop device range.
@media (min-width: @screen-md) { .make-grid(md); }
// Large grid
// Columns and offsets for the large desktop device range.
@media (min-width: @screen-lg) { .make-grid(lg); }

.clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}
